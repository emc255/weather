{"version":3,"sources":["apis/openWeather.js","containers/SearchBar.js","actions/index.js","actions/types.js","containers/WeatherList.js","components/App.js","reducers/index.js","reducers/weatherReducer.js","reducers/weatherErrorReducer.js","index.js"],"names":["axios","create","baseURL","SearchBar","label","useState","term","setTerm","dispatch","useDispatch","className","onSubmit","e","city","preventDefault","type","payload","a","openWeather","get","params","q","units","appid","response","data","onChange","target","value","placeholder","WeatherList","weather","useSelector","state","error","counter","renderWeatherList","map","Fragment","key","name","main","temp","pressure","humidity","checkRenderWeatherList","checkError","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"iPAIeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,oDC2BIC,EA1BG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACPC,mBAAS,IADF,mBACxBC,EADwB,KAClBC,EADkB,KAEzBC,EAAWC,cASjB,OACE,yBAAKC,UAAU,yBACb,0BAAMC,SATW,SAACC,GCPI,IAACC,EDQzBD,EAAEE,iBACFN,ECOK,CACLO,KCnB+B,sBDoB/BC,QAAS,KDRTR,GCVyBK,EDUHP,ECVE,uCAAU,WAAOE,GAAP,eAAAS,EAAA,+EAEXC,EAAYC,IAAI,IAAK,CAC1CC,OAAQ,CACNC,EAAGR,EACHS,MAAO,SACPC,MAAO,sCANuB,OAE5BC,EAF4B,OASlChB,EAAS,CAAEO,KCZc,gBDYOC,QAASQ,EAASC,OAThB,gDAWlCjB,EAAS,CAAEO,KCboB,sBDaOC,QAAS,uCAXb,yDAAV,wDDWxBT,EAAQ,KAKwBG,UAAU,WACtC,yBAAKA,UAAU,SACb,+BAAQN,GACR,yBAAKM,UAAU,mBACb,2BAAOgB,SAAU,SAACd,GAAD,OAAOL,EAAQK,EAAEe,OAAOC,QAAQA,MAAOtB,EAAMS,KAAK,OAAOc,YAAY,mBACtF,4BAAQnB,UAAU,aAAlB,eG2BGoB,EAhDK,WAClB,IAAMC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WACvCG,EAAQF,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAEvCC,EAAU,EAKRC,EAAoBL,EAAQM,KAAI,SAACxB,GACrC,OACE,kBAAC,IAAMyB,SAAP,CAAgBC,IALXJ,KAMH,4BACE,4BAAKtB,EAAK2B,MACV,4BAAK3B,EAAK4B,KAAKC,KAAf,gBACA,4BAAK7B,EAAK4B,KAAKE,UACf,4BAAK9B,EAAK4B,KAAKG,eAMjBC,EAAyBT,GAAwC,KACjEU,EAAaZ,EACjB,yBAAKxB,UAAU,uBACb,uBAAGA,UAAU,eACb,yBAAKA,UAAU,UAAUwB,IAEzB,KAEJ,OACE,6BACGY,EACD,2BAAOpC,UAAU,wBACf,+BACE,4BACE,oCACA,2CACA,wCACA,0CAGJ,+BAAQmC,MChCDE,EATH,WACV,OACE,yBAAKrC,UAAU,gBACb,kBAAC,EAAD,CAAWN,MAAM,qBACjB,kBAAC,EAAD,Q,QCHS4C,cAAgB,CAC7BjB,QCJa,WAAyB,IAAxBE,EAAuB,uDAAf,GAAIgB,EAAW,uCACrC,OAAQA,EAAOlC,MACb,IJJyB,gBIKvB,MAAM,CAAEkC,EAAOjC,SAAf,mBAA2BiB,IAC7B,QACE,OAAOA,IDAXC,MELa,WAAyB,IAAxBD,EAAuB,uDAAf,GAAIgB,EAAW,uCACrC,OAAQA,EAAOlC,MACb,ILH+B,sBKI7B,OAAOkC,EAAOjC,QAChB,QACE,OAAOiB,MCEPiB,EAAQC,YAAYC,EAAUC,YAAgBC,MACpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,cAAc,Y","file":"static/js/main.e8add23c.chunk.js","sourcesContent":["import axios from \"axios\";\n\n//const KEY = \"631b94e02170dff92dd00d9ddda77ed6\";\n\nexport default axios.create({\n  baseURL: \"https://api.openweathermap.org/data/2.5/weather\",\n  // params: {\n  //   units: \"metric\",\n  //   appid: KEY,\n  // },\n});\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { fetchWeather } from \"../actions\";\nimport { error } from \"../actions\";\n\nconst SearchBar = ({ label }) => {\n  const [term, setTerm] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(error());\n    dispatch(fetchWeather(term));\n    setTerm(\"\");\n  };\n\n  return (\n    <div className=\"search-bar ui segment\">\n      <form onSubmit={onFormSubmit} className=\"ui form\">\n        <div className=\"field\">\n          <label>{label}</label>\n          <div className=\"ui action input\">\n            <input onChange={(e) => setTerm(e.target.value)} value={term} type=\"text\" placeholder=\"Search City...\" />\n            <button className=\"ui button\">Search</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import { FETCH_WEATHER, FETCH_WEATHER_ERROR } from \"./types\";\nimport openWeather from \"../apis/openWeather\";\n\nexport const fetchWeather = (city) => async (dispatch) => {\n  try {\n    const response = await openWeather.get(\"/\", {\n      params: {\n        q: city,\n        units: \"metric\",\n        appid: \"631b94e02170dff92dd00d9ddda77ed6\",\n      },\n    });\n    dispatch({ type: FETCH_WEATHER, payload: response.data });\n  } catch (err) {\n    dispatch({ type: FETCH_WEATHER_ERROR, payload: \"We're sorry we can't find the city\" });\n  }\n};\n\nexport const error = () => {\n  return {\n    type: FETCH_WEATHER_ERROR,\n    payload: \"\",\n  };\n};\n","export const FETCH_WEATHER = \"FETCH_WEATHER\";\nexport const FETCH_WEATHER_ERROR = \"FETCH_WEATHER_ERROR\";\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst WeatherList = () => {\n  const weather = useSelector((state) => state.weather);\n  const error = useSelector((state) => state.error);\n\n  let counter = 0;\n  const addCounter = () => {\n    return counter++;\n  };\n\n  const renderWeatherList = weather.map((city) => {\n    return (\n      <React.Fragment key={addCounter()}>\n        <tr>\n          <td>{city.name}</td>\n          <td>{city.main.temp} Â°Celcius</td>\n          <td>{city.main.pressure}</td>\n          <td>{city.main.humidity}</td>\n        </tr>\n      </React.Fragment>\n    );\n  });\n\n  const checkRenderWeatherList = renderWeatherList ? renderWeatherList : null;\n  const checkError = error ? (\n    <div className=\"ui negative message\">\n      <i className=\"close icon\"></i>\n      <div className=\"header\">{error}</div>\n    </div>\n  ) : null;\n\n  return (\n    <div>\n      {checkError}\n      <table className=\"ui single line table\">\n        <thead>\n          <tr>\n            <th>City</th>\n            <th>Temperature</th>\n            <th>Pressure</th>\n            <th>Humidity</th>\n          </tr>\n        </thead>\n        <tbody>{checkRenderWeatherList}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default WeatherList;\n","import React from \"react\";\nimport SearchBar from \"../containers/SearchBar\";\nimport WeatherList from \"../containers/WeatherList\";\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <SearchBar label=\"Weather Forecast\" />\n      <WeatherList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\n// import postsReducer from \"./postsReducer\";\n// import usersReducer from \"./usersReducer\";\nimport weatherReducer from \"./weatherReducer\";\nimport weatherErrorReducer from \"./weatherErrorReducer\";\nexport default combineReducers({\n  weather: weatherReducer,\n  error: weatherErrorReducer,\n});\n","import { FETCH_WEATHER } from \"../actions/types\";\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case FETCH_WEATHER:\n      return [action.payload, ...state];\n    default:\n      return state;\n  }\n};\n","import { FETCH_WEATHER_ERROR } from \"../actions/types\";\n\nexport default (state = \"\", action) => {\n  switch (action.type) {\n    case FETCH_WEATHER_ERROR:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}